package $package;


import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import org.junit.jupiter.api.Test;

class $ClassName {

	@Test
	void testU3L10() {
		// https://resources.coderscampus.com/docs/drills/U3L10/ for detailed instructions

		// Please note that each of these `$two`, `$three`,`$one`,  `$four`, and `$five` is consumed below in the tests.
		// You will need to note the types in order to know how to build the constructor.
		String $two = "${twoValue}";
		int $three = ${threeValue};
		LocalDateTime $one = LocalDateTime.now().plus(10, ChronoUnit.SECONDS);
		boolean $four = $fourValue;
		String $five = "${fiveValue}";

		// Your work here is in 3 parts. Create the class, create the instance variables, and then create a constructor to set those when the class is instantiated.
		// HINT: You might want to change the order, to make things easier
		// 1. Create an external class named `${upperClass}`
		// 2. Within that, declare 5 instance variables to match the names and types being tested in the unit tests below
		// 3. Create the constructor that will allow the code below to pass the unit tests

		// You may wish to consume in order of: $two, $three, $one, $four, $five
		${upperClass} ${aClass} = new ${upperClass}( // finish this constructor to match the needs of the unit test below
		assertEquals($two, ${aClass}.get${six}());
		assertEquals($three, ${aClass}.get${seven}());
		assertEquals($one, ${aClass}.get${eight}());
		assertEquals($four, ${aClass}.is${nine}());
		assertEquals($five, ${aClass}.get${ten}());


	}

}
